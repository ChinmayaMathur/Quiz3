{"ast":null,"code":"const BASE_URL = 'http://localhost:3000/api/v1';\nexport const Auction = {\n  index() {\n    return fetch(`${BASE_URL}/auctions`).then(response => {\n      console.log(response);\n      return response.json();\n    });\n  },\n\n  create(params) {\n    return fetch(`${BASE_URL}/auctions`, {\n      method: 'POST',\n      credentials: 'include',\n      //need this for cookies\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(params)\n    }).then(res => res.json());\n  },\n\n  show(id) {\n    return fetch(`${BASE_URL}/auctions/${id}`).then(res => res.json());\n  }\n\n}; //Sign In AJAX Helper\n\nexport const Session = {\n  create(params) {\n    return fetch(`${BASE_URL}/session`, {\n      method: 'POST',\n      credentials: 'include',\n      //need for cookies to be allowed to be sent cross-origin\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(params)\n    }).then(res => res.json());\n  },\n\n  destroy() {\n    return fetch(`${BASE_URL}/session`, {\n      method: 'DELETE',\n      credentials: 'include'\n    }).then(res => res.json());\n  }\n\n};\nexport const User = {\n  current() {\n    return fetch(`${BASE_URL}/users/current`, {\n      credentials: 'include'\n    }).then(res => res.json());\n  },\n\n  create(params) {\n    return fetch(`${BASE_URL}/users`, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: params\n      })\n    }).then(res => res.json());\n  }\n\n};","map":{"version":3,"sources":["/home/chinmaya/Final_Exam/biddr_client/biddr_react/src/requests.js"],"names":["BASE_URL","Auction","index","fetch","then","response","console","log","json","create","params","method","credentials","headers","body","JSON","stringify","res","show","id","Session","destroy","User","current","user"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,8BAAjB;AAEA,OAAO,MAAMC,OAAO,GAAG;AACnBC,EAAAA,KAAK,GAAE;AACH,WAAOC,KAAK,CAAE,GAAEH,QAAS,WAAb,CAAL,CACNI,IADM,CACDC,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,aAAOA,QAAQ,CAACG,IAAT,EAAP;AACH,KAJM,CAAP;AAKH,GAPkB;;AAQnBC,EAAAA,MAAM,CAACC,MAAD,EAAQ;AACV,WAAOP,KAAK,CAAE,GAAEH,QAAS,WAAb,EAAyB;AACjCW,MAAAA,MAAM,EAAE,MADyB;AAEjCC,MAAAA,WAAW,EAAE,SAFoB;AAET;AACxBC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAHwB;AAMjCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,MAAf;AAN2B,KAAzB,CAAL,CAOJN,IAPI,CAOEa,GAAD,IAASA,GAAG,CAACT,IAAJ,EAPV,CAAP;AAQH,GAjBkB;;AAkBnBU,EAAAA,IAAI,CAACC,EAAD,EAAI;AACJ,WAAOhB,KAAK,CAAE,GAAEH,QAAS,aAAYmB,EAAG,EAA5B,CAAL,CACNf,IADM,CACDa,GAAG,IAAIA,GAAG,CAACT,IAAJ,EADN,CAAP;AAEH;;AArBkB,CAAhB,C,CAwBP;;AACA,OAAO,MAAMY,OAAO,GAAG;AACnBX,EAAAA,MAAM,CAACC,MAAD,EAAQ;AACV,WAAOP,KAAK,CAAE,GAAEH,QAAS,UAAb,EAAwB;AAChCW,MAAAA,MAAM,EAAE,MADwB;AAEhCC,MAAAA,WAAW,EAAE,SAFmB;AAER;AACxBC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAHuB;AAMhCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,MAAf;AAN0B,KAAxB,CAAL,CAOJN,IAPI,CAOCa,GAAG,IAAIA,GAAG,CAACT,IAAJ,EAPR,CAAP;AAQH,GAVkB;;AAWnBa,EAAAA,OAAO,GAAE;AACL,WAAOlB,KAAK,CAAE,GAAEH,QAAS,UAAb,EAAwB;AAChCW,MAAAA,MAAM,EAAE,QADwB;AAEhCC,MAAAA,WAAW,EAAE;AAFmB,KAAxB,CAAL,CAGJR,IAHI,CAGCa,GAAG,IAAIA,GAAG,CAACT,IAAJ,EAHR,CAAP;AAIH;;AAhBkB,CAAhB;AAmBP,OAAO,MAAMc,IAAI,GAAG;AAChBC,EAAAA,OAAO,GAAG;AACN,WAAOpB,KAAK,CAAE,GAAEH,QAAS,gBAAb,EAA8B;AACtCY,MAAAA,WAAW,EAAE;AADyB,KAA9B,CAAL,CAEJR,IAFI,CAECa,GAAG,IAAIA,GAAG,CAACT,IAAJ,EAFR,CAAP;AAGH,GALe;;AAMhBC,EAAAA,MAAM,CAACC,MAAD,EAAQ;AACV,WAAOP,KAAK,CAAE,GAAEH,QAAS,QAAb,EAAsB;AAC9BW,MAAAA,MAAM,EAAE,MADsB;AAE9BC,MAAAA,WAAW,EAAE,SAFiB;AAG9BC,MAAAA,OAAO,EAAE;AACT,wBAAe;AADN,OAHqB;AAM9BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEQ,QAAAA,IAAI,EAAEd;AAAR,OAAf;AANwB,KAAtB,CAAL,CAOJN,IAPI,CAOCa,GAAG,IAAIA,GAAG,CAACT,IAAJ,EAPR,CAAP;AAQH;;AAfe,CAAb","sourcesContent":["const BASE_URL = 'http://localhost:3000/api/v1'\n\nexport const Auction = {\n    index(){\n        return fetch(`${BASE_URL}/auctions`)\n        .then(response => {\n            console.log(response);\n            return response.json()\n        })\n    },\n    create(params){\n        return fetch(`${BASE_URL}/auctions`, {\n            method: 'POST',\n            credentials: 'include', //need this for cookies\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(params)\n        }).then((res) => res.json());\n    },\n    show(id){\n        return fetch(`${BASE_URL}/auctions/${id}`)\n        .then(res => res.json())\n    }\n}\n\n//Sign In AJAX Helper\nexport const Session = {\n    create(params){\n        return fetch(`${BASE_URL}/session`, {\n            method: 'POST',\n            credentials: 'include', //need for cookies to be allowed to be sent cross-origin\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(params)\n        }).then(res => res.json());\n    },\n    destroy(){\n        return fetch(`${BASE_URL}/session`, {\n            method: 'DELETE',\n            credentials: 'include',\n        }).then(res => res.json())\n    }\n}\n\nexport const User = {\n    current() {\n        return fetch(`${BASE_URL}/users/current`, {\n            credentials: 'include'\n        }).then(res => res.json())\n    },\n    create(params){\n        return fetch(`${BASE_URL}/users`, {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n            'Content-Type':'application/json'\n            },\n            body: JSON.stringify({ user: params })\n        }).then(res => res.json())\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}