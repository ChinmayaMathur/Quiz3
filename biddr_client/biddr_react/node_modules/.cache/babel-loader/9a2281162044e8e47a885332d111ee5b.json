{"ast":null,"code":"var _jsxFileName = \"/home/chinmaya/Final_Exam/biddr_client/biddr_react/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css'; // import CurrentDateTime from './components/CurrentDateTime';\n// import { Session } from './requests'\n\nimport { User } from './requests';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport NavBar from './components/NavBar';\nimport NewQuestionPage from './components/NewQuestionPage';\nimport SignInPage from './components/SignInPage';\nimport AuthRoute from './components/AuthRoute';\nimport SignUpPage from './components/SignUpPage';\nimport NotFoundPage from './components/NotFoundPage'; // function App() {\n//   return (\n//     <div className=\"App\">\n//       <QuestionShowPage /> \n//       <QuestionIndexPage />\n//     </div>\n//   );\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getCurrentUser = () => {\n      return User.current().then(user => {\n        if (user === null || user === void 0 ? void 0 : user.id) {\n          this.setState(state => {\n            return {\n              user\n            };\n          });\n        }\n      });\n    };\n\n    this.onSignOut = () => {\n      this.setState({\n        user: null\n      });\n    };\n\n    this.state = {\n      clocksCount: [1],\n      user: null\n    };\n  } //Hacky Sign in with mock data passed as params\n\n\n  componentDidMount() {\n    this.getCurrentUser();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        currentUser: this.state.user,\n        onSignOut: this.onSignOut\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/sign_in\" //Anytime we want to render a component that requires some props,\n          // and that component is being rendered by a Route component\n          //then the way to pass props is to use the \"render\" property\n          //It takes a function as an argument and the function returns the component\n          //with the props passed to it. \"routeProps\" represents all the routing props\n          //Make sure to pass them to the component as well\n          ,\n          render: routeProps => /*#__PURE__*/_jsxDEV(SignInPage, { ...routeProps,\n            onSignIn: this.getCurrentUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/sign_up\",\n          render: routeProps => /*#__PURE__*/_jsxDEV(SignUpPage, { ...routeProps,\n            onSignUp: this.getCurrentUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/questions\",\n          children: /*#__PURE__*/_jsxDEV(QuestionIndexPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AuthRoute //The !! turns something \"truthy\" or \"falsy\" to true or false respectively\n        , {\n          isAuthenticated: !!this.state.user,\n          exact: true,\n          path: \"/questions/new\",\n          component: NewQuestionPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/questions/:id\",\n          component: QuestionShowPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          component: NotFoundPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/chinmaya/Final_Exam/biddr_client/biddr_react/src/App.js"],"names":["React","Component","User","BrowserRouter","Route","Switch","NavBar","NewQuestionPage","SignInPage","AuthRoute","SignUpPage","NotFoundPage","App","constructor","props","getCurrentUser","current","then","user","id","setState","state","onSignOut","clocksCount","componentDidMount","render","routeProps","QuestionShowPage"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\n\n// import CurrentDateTime from './components/CurrentDateTime';\n// import { Session } from './requests'\nimport { User } from './requests'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport NavBar from './components/NavBar';\nimport NewQuestionPage from './components/NewQuestionPage';\nimport SignInPage from './components/SignInPage';\nimport AuthRoute from './components/AuthRoute';\nimport SignUpPage from './components/SignUpPage';\nimport NotFoundPage from './components/NotFoundPage';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <QuestionShowPage /> \n//       <QuestionIndexPage />\n//     </div>\n//   );\n// }\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clocksCount: [1],\n      user: null\n    }\n  }\n\n  //Hacky Sign in with mock data passed as params\n  componentDidMount () {\n    this.getCurrentUser()\n  }\n\n  getCurrentUser = () => {\n    return User.current().then(user => {\n      if(user?.id){\n        this.setState(state => {\n          return { user }\n        })\n      }\n    })\n  }\n\n  onSignOut = () => {\n    this.setState({\n      user: null\n    })\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <NavBar currentUser={this.state.user} onSignOut={this.onSignOut}/>\n        <Switch>\n          <Route \n          exact path='/sign_in'\n          //Anytime we want to render a component that requires some props,\n          // and that component is being rendered by a Route component\n          //then the way to pass props is to use the \"render\" property\n          //It takes a function as an argument and the function returns the component\n          //with the props passed to it. \"routeProps\" represents all the routing props\n          //Make sure to pass them to the component as well\n          render={(routeProps) => <SignInPage {...routeProps} onSignIn={this.getCurrentUser} />}\n          />\n          <Route \n          exact path='/sign_up' \n          render={(routeProps) => <SignUpPage {...routeProps} onSignUp={this.getCurrentUser} />} \n          />\n          <Route exact path='/questions'>\n            <QuestionIndexPage />\n          </Route>\n          <AuthRoute\n            //The !! turns something \"truthy\" or \"falsy\" to true or false respectively\n            isAuthenticated={!!this.state.user}\n            exact path='/questions/new'\n            component={NewQuestionPage}\n          />\n          <Route path='/questions/:id' component={QuestionShowPage}></Route>\n          <Route component={NotFoundPage} />\n          </Switch>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}